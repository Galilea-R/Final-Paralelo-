# -*- coding: utf-8 -*-
"""computo_paralelo_bolsa_de_palabras.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v4VvVDYpdeZjtnDcUzKeSVjDk5W6_YNf

# Librerías
"""

import pandas as pd
import numpy as np
import re
import nltk
import matplotlib.pyplot as plt

"""# Corpus etiquetado"""

etiquetas = ["dickens_a_christmas_carol",
             "dickens_a_tale_of_two_cities",
             "dickens_oliver_twist",
             "shakespeare_hamlet",
             "shakespeare_romeo_juliet",
             "shakespeare_the_merchant_of_venice"]
corpus = []

for etiqueta in etiquetas:
  archivo = open(etiqueta + ".txt", "r")
  corpus.append(archivo.read())
  archivo.close()


corpus = np.array(corpus)
df_corpus = pd.DataFrame({"documento": corpus,
                          "categoria": etiquetas})
df_corpus

"""# Modelo de Bolsa de Palabras"""

from sklearn.feature_extraction.text import CountVectorizer
# bolsa de palabras en matriz dispersa
count_vectorizer = CountVectorizer(min_df=0.0, max_df=1.0)
matriz_conteo = count_vectorizer.fit_transform(corpus)
matriz_conteo

# ver valores diferentes de cero en la matriz dispersa
print(matriz_conteo)

# ver la representación densa
matriz_conteo = matriz_conteo.toarray()
matriz_conteo

# obten todas las palabras únicas del corpus
vocabulario = count_vectorizer.get_feature_names_out()
# muestra los vectores de características del documento
pd.DataFrame(matriz_conteo, columns=vocabulario)

"""#Vocabulario (número de columnas de la matriz)"""

print(len(vocabulario), vocabulario)

np.savetxt("vocab.txt", vocabulario, fmt="%s", delimiter=",")